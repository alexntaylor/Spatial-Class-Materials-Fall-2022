m.mpaa
rm(list = ls())
# These are the solved exercises from Exercise 1
# Created: 9/20/21
# Last Updated: 9/20/21
# Author: Noel Johnson
####################################
# global libraries used everywhere #
####################################
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "stargazer", "units")
results <- sapply(as.list(global.libraries), pkgTest)
# Exercise: Tidyverse
ratings <- read_csv("http://www.stern.nyu.edu/~wgreene/Text/Edition7/TableF4-3.csv")
ratings
ratings_5 <- ratings[,1:5] %>%
mutate(BOX=BOX/1000000)
ratings_5
ratings_factor <- ratings_5 %>%
mutate_at(vars(MPRATING),c(factor)) %>%
mutate(MPAA = fct_recode(MPRATING,
"G" = "1",
"PG" = "2",
"PG13" = "3",
"R" = "4"
))
ratings_factor
ratings_avgs <- ratings_factor %>%
group_by(MPAA) %>%
dplyr::select(c(BOX, BUDGET)) %>%
summarise(mean_BOX = mean(BOX), mean_BUDGET = mean(BUDGET), mean_BOX_BUDGET = mean(BOX/BUDGET)) %>%
ungroup()
View(ratings_factor)
View(ratings_avgs)
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
ratings <- read.csv("http://www.stern.nyu.edu/~wgreene/Text/Edition7/TableF4-3.csv")
# Problem 1 ---------------------------------------------------------------
# Select first 5 variables, change BOX to millions
ratings_5 <- ratings %>%
dplyr::select(1:5)
ratings_5
ratings_5 <- ratings_5 %>%
mutate(BOX = BOX/1000000)
ratings_5
# Problem 2 ---------------------------------------------------------------
# Create factor MPAA from MPRATING
ratings_f <- ratings_5 %>%
mutate(MPAA = factor(MPRATING, labels = c("G","PG","PG13","R")))
ratings_f
# Problem 3 ---------------------------------------------------------------
m.mpaa <- ratings_f %>%
mutate(RATIO = BOX/BUDGET) %>%
group_by(MPAA) %>%
summarize_at(vars("BOX","BUDGET","RATIO"),mean) %>%
rename(M.BOX = BOX, M.BUDGET = BUDGET, M.RATIO = RATIO) %>%
ungroup()
m.mpaa
ratings_m <- ratings_f %>%
mutate(RATIO = BOX/BUDGET) %>%
left_join(m.mpaa, by = "MPAA")
ratings_m
ratings_m <- ratings_m %>%
group_by(MPAA) %>%
mutate(SD.RATIO = sd(RATIO)) %>%
ungroup()
ratings_m
View(ratings_m)
ratings_m <- ratings_m %>%
mutate(DIST.RATIO = abs(RATIO - M.RATIO)/SD.RATIO) %>%
arrange(desc(DIST.RATIO))
g_perform <- ratings %>%
filter(MPAA == "G") %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
g_perform <- ratings_m %>%
filter(MPAA == "G") %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
g_perform # Onl
pg_perform <- ratings_m %>%
filter(MPAA == "PG") %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
pg_perform
pg13_perform <- ratings_m %>%
filter(MPAA == "PG13") %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
pg13_perform
r_perform <- ratings_m %>%
filter(MPAA == "R") %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
r_perform
perform <- ratings_m %>%
arrange(desc(DIST.RATIO)) %>%
slice(1:6)
perform
View(ratings_f)
ratings_tb <- ratings_f %>%
mutate(RATIO = BOX/BUDGET) %>%
group_by(MPAA) %>%
mutate(M.BOX = mean(BOX), M.BUDGET = mean(BUDGET), M.RATIO = mean(RATIO))
View(ratings_tb)
View(m.mpaa)
ratings_tb <- ratings_f %>%
mutate(RATIO = BOX/BUDGET) %>%
group_by(MPAA) %>%
mutate(M.BOX = mean(BOX), M.BUDGET = mean(BUDGET), M.RATIO = mean(RATIO)) %>%
mutate(SD.RATIO = sd(RATIO)) %>%
mutate(DIST.RATIO = abs(RATIO - M.RATIO)/SD.RATIO) %>%
arrange(desc(DIST.RATIO)) %>%
ungroup()
View(perform)
rm(list = ls())
africa_sf <- st_read("./Lecture 2/data/africa_scale.shp")
africa_sf <- st_read("../Lecture 2/data/africa_scale.shp")
cities <- read.csv("../Lecture 2/data/africa_cities.csv")
View(cities)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
View(cities_large)
max(cities_large$pop)
# Convert pop to numeric
cities$pop <- as.numeric(cities$pop)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
cities_large
max(cities_large$pop)
min(cities_large$pop)
stargazer(cities_large)
stargazer(cities_large, type = "text")
stargazer(as.data.frame(cities_large), type = "text")
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
View(cities_small)
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
View(cities_urb)
?sum
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop, na.rm = T), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("../Lecture 2/data/africa_scale.shp")
cities <- read.csv("../Lecture 2/data/africa_cities.csv")
# Problem 1 ---------------------------------------------------------------
# Convert pop to numeric
cities$pop <- as.numeric(cities$pop)
# Remove pop NAs
cities <- cities %>%
drop_na(pop)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
cities_large
# Largest city is Kinshasa with a population of 7,273,947
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop, na.rm = T), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
cities_large
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
sum(cities_urb$ctry_pop_tot)
sum(cities_urb$pr_pop)
sum(cities_urb$pr_share)
View(africa_sf)
?right_join
africa_n <- cities_urb %>%
filter(pop == max(pop)) %>%
rename(iso_a3 = iso3v10) %>%
select(pr_share, pop, iso_a3) %>%
right_join(africa_sf, by = "iso_a3")
africa_n <- cities_urb %>%
filter(pop == max(pop)) %>%
rename(iso_a3 = iso3v10) %>%
dplyr::select(pr_share, pop, iso_a3) %>%
right_join(africa_sf, by = "iso_a3")
View(africa_n)
cities_urb %>%
filter(pop == max(pop))
View(cities_urb)
africa_n <- cities_urb %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup() %>%
rename(iso_a3 = iso3v10) %>%
dplyr::select(pr_share, pop, iso_a3) %>%
right_join(africa_sf, by = "iso_a3")
# Plot
plot(africa_n["pr_share"],
axes = T,
main = "Title")
View(africa_sf)
# Plot
plot(africa_n[66],
axes = T,
main = "Title")
?plot
rm(list=ls()) # clear space
# get pkgs
library(tidyverse)
library(sf)
library(stargazer)
setwd("/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Lecture 2")
africa_sf <- st_read("data/africa_scale.shp")
glimpse(africa_sf)
plot(africa_sf[64])
dim(africa_sf)
class(africa_sf) # What is it?
st_crs(africa_sf) # What's the CRS?
st_bbox(africa_sf) # And the extent/bounding box?
stargazer(as.data.frame(africa_sf), type="text")
# Subset, there are way too many variables
africa_sf <- africa_sf %>%
select(admin, type, iso_a3, region_wb, pop_est)
# Subset, there are way too many variables
africa_sf <- africa_sf %>%
dplyr::select(admin, type, iso_a3, region_wb, pop_est)
# There's a geometry variable
names(africa_sf)[6]
# Make a fast and easy plot
dev.off()
plot(africa_sf[6], reset=F)
# read the csv of african cities
cities_csv <- read_csv("data/africa_cities.csv")
# filter out missing coords
cities_csv <- cities_csv %>%
filter( !( is.na(lon) & is.na(lat) ) )
# turn into sf points, specify coords and crs
cities_sf <- st_as_sf(cities_csv,
coords = c("lon", "lat"),
crs = 4326)
plot(cities_sf[1], axes = T, pch = 20,
col = "black", main = "Cities")
dev.off()
# Plot the regions and cities together
glimpse(africa_sf)
plot(africa_sf[6], axes = T,
main = "", key.pos = 1,
key.width = lcm(1.3), key.length = 1.0, reset=T)
plot(cities_sf[1], axes = T, pch = 20,
col = "black", main = "Cities", add = TRUE)
View(cities_sf)
View(cities_sf)
# Homework 1, Exercise: Map Making
# Created: 9/12/22
# Last Edited: 9/12/22
# Author: Alexander Taylor
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("../Lecture 2/data/africa_scale.shp")
cities <- read.csv("../Lecture 2/data/africa_cities.csv")
# Problem 1 ---------------------------------------------------------------
# Convert pop to numeric
cities$pop <- as.numeric(cities$pop)
# Remove pop NAs
cities <- cities %>%
drop_na(pop)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
cities_large
# Largest city is Kinshasa with a population of 7,273,947
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
# Caxito, Lucapa, N'Giva, and Arta all have 0 population
# Smallest non-zero population is Harbour with a population of 10
# Problem 2 ---------------------------------------------------------------
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop, na.rm = T), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
# Problem 3 ---------------------------------------------------------------
# Merge
africa_n <- cities_urb %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup() %>%
rename(iso_a3 = iso3v10) %>%
dplyr::select(pr_share, pop, iso_a3) %>%
right_join(africa_sf, by = "iso_a3")
?plot
# Plot
plot(africa_n[66],
axes = T,
main = "",
key.pos = 1,
key.width = lcm(1.3),
key.length = 1.0,
reset=T)
plot(africa_n[1],
axes = T,
pch = 20,
main = "% Pop in Primate City",
add = T)
View(africa_sf)
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("../Lecture 2/data/africa_scale.shp")
africa_sf <- africa_sf %>%
dplyr::select(admin, type, iso_a3, region_wb, pop_est)
cities <- read.csv("../Lecture 2/data/africa_cities.csv")
View(africa_sf)
View(africa_sf[[6]][[1]])
# Problem 1 ---------------------------------------------------------------
# Convert pop to numeric
cities$pop <- as.numeric(cities$pop)
# Remove pop NAs
cities <- cities %>%
drop_na(pop)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
cities_large
# Largest city is Kinshasa with a population of 7,273,947
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
# Caxito, Lucapa, N'Giva, and Arta all have 0 population
# Smallest non-zero population is Harbour with a population of 10
# Problem 2 ---------------------------------------------------------------
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop, na.rm = T), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
# Problem 1 ---------------------------------------------------------------
# Convert pop to numeric
cities$pop <- as.numeric(cities$pop)
# Remove pop NAs
cities <- cities %>%
drop_na(pop)
cities_large <- cities %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup()
cities_large
# Largest city is Kinshasa with a population of 7,273,947
cities_small <- cities %>%
group_by(iso3v10) %>%
filter(pop == min(pop)) %>%
ungroup()
cities_small
# Caxito, Lucapa, N'Giva, and Arta all have 0 population
# Smallest non-zero population is Harbour with a population of 10
# Problem 2 ---------------------------------------------------------------
cities_urb <- cities %>%
group_by(iso3v10) %>%
mutate(ctry_pop_tot = sum(pop, na.rm = T), pr_pop = max(pop)) %>%
mutate(pr_share = pr_pop/ctry_pop_tot) %>%
ungroup()
cities_urb
# Merge
cities_m <- cities_urb %>%
group_by(iso3v10) %>%
filter(pop == max(pop)) %>%
ungroup() %>%
rename(iso_a3 = iso3v10) %>%
dplyr::select(pr_share, iso_a3)
View(cities_m)
africa_n <- africa_sf %>%
left_join(cities_m, by = "iso_a3")
View(africa_n)
# Plot
plot(africa_n["pr_share"],
axes = T,
main = "% of Urban Pop in Primate City",
key.pos = 1,
key.width = lcm(1.3),
key.length = 1.0,)
# Plot
plot(africa_n["pr_share"],
axes = T,
main = "% of Urban Pop in Primate City")
