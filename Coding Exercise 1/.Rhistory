theme_minimal() +
labs(
title = "Violations Per Capita by ZIP",
x = "ZIP",
y = "Violations Per Capita"
)
#Plot pc
ggplot(byzip[which(byzip$v_pc>.05 & byzip$v_pc<1),], aes(x=factor(ZIP), y=v_pc)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(
title = "Violations Per Capita by ZIP",
x = "ZIP",
y = "Violations Per Capita"
)
#Plot pc
ggplot(byzip[which(byzip$v_pc>.1 & byzip$v_pc<1),], aes(x=factor(ZIP), y=v_pc)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(
title = "Violations Per Capita by ZIP",
x = "ZIP",
y = "Violations Per Capita"
)
#ZIP data
ZIP <- read_csv("/Users/atay508/Documents/George Mason/Papers/Property Violations/Data/zip_code_database.csv")
View(ZIP)
ZIP$zip <- as.numeric(ZIP$zip)
?full_join
byzip %>%
rename(zip = ZIP) -> byzip
#merge in ZIP
byzip %>%
full_join(ZIP, by = zip) -> byzip
#merge in ZIP
byzip %>%
full_join(ZIP, by = zip) -> byzip
#merge in ZIP
byzip %>%
full_join(ZIP, by = "zip") -> byzip
library(pacman)
p_load(tidyverse, stringi, lubridate, readxl, writexl)
#Retrieved from data.nashville.gov (link from Radley Balko) accessed 9 March 2022
violations <- read_csv("~/Documents/George Mason/Papers/Property Violations/Data/Property_Standards_Violations.csv")
#Dates
violations$`Date Received` %>%
mdy() -> violations$`Date Received`
violations$`Last Activity Date` %>%
mdy() -> violations$`Last Activity Date`
#Drop NA ZIPs
violations %>%
drop_na(ZIP) -> violations1
violations1 <- violations1[violations1$ZIP != 0,]
#Frequency by ZIP
violations1 %>%
count(ZIP) %>%
tibble() -> byzip
byzip %>%
rename(zip = ZIP) -> byzip
ZIP <- read_csv("/Users/atay508/Documents/George Mason/Papers/Property Violations/Data/zip_code_database.csv")
ZIP$zip <- as.numeric(ZIP$zip)
#merge in ZIP
byzip %>%
left_join(ZIP, by = "zip") -> byzip
?rename
?mutate
byzip %>%
rename(violations = n, pop_irs18 = irs_estimated_population, -type, -decommissioned)
byzip %>%
rename(violations = n, pop_irs18 = irs_estimated_population) %>%
select(-type, -decommissioned, -acceptable_cities, -unacceptable_cities, -state,
-timezone, -area_codes, -world_region, -country) -> byzip
#Violations per capita
byzip$violations_pc <- byzip$violations/byzip$pop_irs18
#Plot pc
ggplot(byzip[which(byzip$violations_pc>.1 & byzip$violations_pc<1),], aes(x=factor(zip), y=violations_pc)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(
title = "Violations Per Capita by ZIP",
x = "ZIP",
y = "Violations Per Capita"
)
byzip$pop_irs18[byzip$pop_irs18 == 0] <- NA
#Violations per capita
byzip$violations_pc <- byzip$violations/byzip$pop_irs18
View(violations1)
unique(violations1$`Council District`)
#Extract lat & long
violations1$`Mapped Location` %>%
str_extract('(?<=\\().*?(?=\\)')
#Extract lat & long
violations1$`Mapped Location` %>%
str_extract('(?<=\\().*?(?=\\))')
?str_split
#Extract lat & long
violations1$`Mapped Location` %>%
str_extract('(?<=\\().*?(?=\\))') -> violations1$`Mapped Location`
count(is.na(violations1$`Mapped Location`))
sum(is.na(violations1$`Mapped Location`))
View(violations)
rm(list = ls())
#By: Alex Taylor
#Date: 9 March 22
library(pacman)
p_load(tidyverse, stringi, lubridate, readxl, writexl)
#Retrieved from data.nashville.gov (link from Radley Balko) accessed 9 March 2022
violations <- read_csv("~/Documents/George Mason/Papers/Property Violations/Data/Property_Standards_Violations.csv")
#Dates
violations$`Date Received` %>%
mdy() -> violations$`Date Received`
violations$`Last Activity Date` %>%
mdy() -> violations$`Last Activity Date`
#Drop NA ZIPs
violations %>%
drop_na(ZIP) -> violations
violations <- violations[violations$ZIP != 0,]
#Extract lat & long
violations$`Mapped Location` %>%
str_extract('(?<=\\().*?(?=\\))') -> violations$`Mapped Location`
violations %>%
separate(`Mapped Location`, sep = ", ", into = c("latitude", "longitude")) -> violations
#Frequency by ZIP
violations %>%
count(ZIP) %>%
tibble() -> byzip
byzip %>%
rename(zip = ZIP) -> byzip
#ZIP data
ZIP <- read_csv("/Users/atay508/Documents/George Mason/Papers/Property Violations/Data/zip_code_database.csv")
ZIP$zip <- as.numeric(ZIP$zip)
#merge in ZIP
byzip %>%
left_join(ZIP, by = "zip") -> byzip
byzip %>%
rename(violations = n, pop_irs18 = irs_estimated_population) %>%
select(-type, -decommissioned, -acceptable_cities, -unacceptable_cities, -state,
-timezone, -area_codes, -world_region, -country) -> byzip
byzip$pop_irs18[byzip$pop_irs18 == 0] <- NA
#Violations per capita
byzip$violations_pc <- byzip$violations/byzip$pop_irs18
options(scipen=999)
View(violations)
install.packages(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github('hrbrmstr/rgeocodio')
exit
close
load("/Users/atay508/Documents/George Mason/Papers/Printing Press/Data/Clean_USTC.Rda")
Raw_USTC %>%
f
library(tidyverse)
Raw_USTC %>%
View(Raw_USTC)
View(Raw_USTC)
Raw_USTC %>%
filter(year <= 1600) -> ustc_pre1600
groceries <- (6.23+69.76)/2
f_watch <- 38.73/2
fast_food <- (12.5+21.97+30.95)/2
booze <- (18.01+32)/2
booze+fast_food+f_watch+groceries
115.075-groceries
install.packages(usethis)
install.packages("usethis")
library(pacman)
install.packages("pacman")
library(pacman)
p_load(usethis)
p_load(usethis, tidyverse)
use_git_config(user.name = "Alex Taylor", user.email = "ataylo46@gmu.edu")
usethis::git_default_branch_configure()
usethis::create_github_token()
# Set
gitcreds::gitcreds_set()
load("/Users/atay508/Dropbox/USTC Data/Data Files/Clean_USTC.Rda")
View(Raw_USTC)
unique(Raw_USTC$subject)
library(tidyverse)
Raw_USTC %>%
filter(subject == "Travel, topography, maps and navigational manuals")
Raw_USTC %>%
filter(subject == "Travel, topography, maps and navigational manuals") -> travel_bks
save(travel_bks, file = "~/Downloads/travel_bks.Rda")
library(pacman)
p_load(tidyverse, ggplot2, skimr)
load(file = "~/Dropbox/USTC Data/Data Files/Clean_USTC.Rda")
View(Raw_USTC)
load("/Users/atay508/Documents/George Mason/Papers/Printing Press/Data/ustc_vernac_4-23-22.Rda")
View(ustc_vernac_4_23_22)
ustc_vernac_4_23_22 %>%
filter(place == "antwerp") -> antwerp
ustc_vernac_4_23_22 %>%
filter(place == "amsterdam") -> amsterdam
ggplot() +
geom_line(data = antwerp, stat = "count", aes(x=year), color = "blue") +
geom_line(data = amsterdam, stat = "count", aes(x=year), color = "red")
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("./data/africa_scale.shp")
cities <- read.csv("./data/africa_cities.csv")
?tibble
salaam_moshi <- tibble(city = c("Dar es Salaam", "Moshi"),
lat = c(-6.816111, -3.334883),
long = c(39.280278, 37.340381))
View(salaam_moshi)
salaam_moshi <- tibble(city = c("Dar es Salaam", "Moshi"),
long = c(39.280278, 37.340381),
lat = c(-6.816111, -3.334883))
salaam_moshi_sf <- st_as_sf(salaam_moshi,
coords = c("long","lat"),
crs = 4326)
View(salaam_moshi_sf)
st_distance(salaam_moshi_sf)
st_coordinates(salaam_moshi_sf)
dist(st_coordinates(salaam_moshi_sf), method = "euclidean")
?dist
st_is_longlat(salaam_moshi_sf)
dist(st_coordinates(salaam_moshi_sf), method = "euclidean")
?st_transform
salaam_moshi_moll <- salaam_moshi_sf %>%
st_transform("+proj=moll")
View(salaam_moshi_moll)
View(salaam_moshi_sf)
View(salaam_moshi_moll)
View(salaam_moshi_sf)
View(salaam_moshi_moll)
View(salaam_moshi_sf)
st_is_longlat(salaam_moshi_moll)
cty2 <- tibble(name = "Kinshasa",
x = 1531775, y = -531896.9) %>%
st_as_sf(coords = c("x", "y"), crs = "+proj=moll")
View(cty2)
rm(cty2)
st_distance(salaam_moshi_moll)
dist(st_coordinates(salaam_moshi_moll), method = "euclidean")
rm(list = ls())
# Create a tibble and then a simple feature data set containing both cities in EPSG 4326
east_africa <- tibble(
id = 1:2,
city = c("Dar Es Salaam", "Moshi"),
latitude = c(-6.8, -3.334883),
longitude = c(39.283333, 37.340381)
)
east_africa
east_africa_sf <- st_as_sf(east_africa,
coords = c("longitude", "latitude"),
crs = 4326)
# Calculate the distance between these two cities using st_distance()
st_distance(east_africa_sf)
#Compare this to the Euclidean distance (use dist() from base R with st_coordinates() and think about angles)
st_coordinates(east_africa_sf)
dist(st_coordinates(east_africa_sf), method = "euclidean")
east_africa_moll <- east_africa_sf %>% st_transform(crs = "+proj=moll +lat_0=-5 +lon_0=38 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs")
st_crs(east_africa_moll)
st_coordinates(east_africa_moll)
st_distance(east_africa_moll)
dist(st_coordinates(east_africa_moll), method = "euclidean")
east_africa_aeqd <- east_africa_sf %>% st_transform(crs = "+proj=aeqd +lat_0=-5 +lon_0=38 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs")
st_crs(east_africa_aeqd)
st_coordinates(east_africa_moll)
st_distance(east_africa_aeqd)
dist(st_coordinates(east_africa_aeqd), method = "euclidean")
salaam_moshi_aeqd <- salaam_moshi_sf %>%
st_transform("+proj=aeqd")
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Problem 1 ---------------------------------------------------------------
# Dar Es Salaam: lat = -6.816111, long = 39.280278
# Moshi: lat = -3.334883, long = 37.340381
salaam_moshi <- tibble(city = c("Dar es Salaam", "Moshi"),
long = c(39.280278, 37.340381),
lat = c(-6.816111, -3.334883))
salaam_moshi
salaam_moshi_sf <- st_as_sf(salaam_moshi,
coords = c("long","lat"),
crs = 4326)
# Problem 2 ---------------------------------------------------------------
st_distance(salaam_moshi_sf)
# Distance using st_distance is 442,711.8 meters
dist(st_coordinates(salaam_moshi_sf), method = "euclidean")
# 3.985241
# Euclidean distance is distance between each city in a weird long-lat unit,
# which doesn't really work given that the distance between long and lat lines
# changes depending on where they're located on the earth. This warped nature of
# straight lines on a sphere throws off euclidean distance calculations, as
# a right triangle (used for calculating euclidean distance) can contain more
# than 180 degrees
# Problem 3 ---------------------------------------------------------------
# Mollweide Projection
salaam_moshi_moll <- salaam_moshi_sf %>%
st_transform("+proj=moll")
st_distance(salaam_moshi_moll)
# Distance using st_distance is 466,378.5 meters
dist(st_coordinates(salaam_moshi_moll), method = "euclidean")
# Distance using dist() is the same for the Mollweide projection, 466,378.5 meters
# Azimuthal Projection
salaam_moshi_aeqd <- salaam_moshi_sf %>%
st_transform("+proj=aeqd")
st_distance(salaam_moshi_aeqd)
dist(st_coordinates(salaam_moshi_aeqd), method = "euclidean")
africa_roads <- st_read("./data/africa_roads.shp")
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_roads <- st_read("./data/africa_roads.shp")
africa_sf <- st_read("./data/africa_scale.shp")
View(africa_sf)
plot(africa_sf[4])
plot(africa_sf[1], main = "Roads by Type", col = NA)
plot(africa_roads["type"], add=T)
plot(africa_roads["type"], add=T)
plot(africa_sf[1], main = "Roads by Type", col = NA)
plot(africa_roads["type"], add=T)
plot(africa_roads["type"], main = "Roads by Type")
plot(africa_sf[1], col = NA, add=T)
plot(africa_roads["type"], reset=F, main = "Roads by Type")
plot(africa_sf[1], col = NA, add=T)
plot(africa_sf[1], reset=F, col = NA)
plot(africa_roads["type"], main = "Roads by Type", add=T)
plot(africa_roads["type"], reset=F, main = "Roads by Type")
plot(africa_sf[1], col = NA, add=T)
plot(africa_roads["type"], reset=F, main = "Roads by Type", key.pos=1)
plot(africa_sf[1], col = NA, add=T)
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap", "units")
results <- sapply(as.list(global.libraries), pkgTest)
africa_roads <- africa_roads %>%
mutate(road_length = africa_roads %>%
st_length() %>%
set_units(km))
View(africa_roads)
africa_rds_df <- africa_roads %>%
st_set_geometry(NULL) %>%
group_by(adm0_a3) %>%
mutate(tot_rd_lgnth = sum(road_length)) %>%
ungroup()
View(africa_rds_df)
africa_sf <- africa_sf %>%
mutate(ctry_area = africa_sf %>%
st_area() %>%
set_units(km^2))
View(africa_sf)
?left_join
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap", "units", "collapse")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
# Work toward merge
africa_rds_df <- africa_rds_df %>%
rename(iso_a3 = adm0_a3) %>%
select(iso_a3, tot_rd_lgnth)
# Work toward merge
africa_rds_df <- africa_rds_df %>%
rename(iso_a3 = adm0_a3) %>%
dplyr::select(iso_a3, tot_rd_lgnth)
# Merge
africa_sf_new <- left_join(africa_rds_df, by = "iso_a3")
# Merge
africa_sf_new <- africa_sf %>%
left_join(africa_rds_df, by = "iso_a3")
# Merge
africa_sf_new <- africa_sf %>%
inner_join(africa_rds_df, by = "iso_a3")
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap", "units", "collapse")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("./data/africa_scale.shp")
africa_roads <- st_read("./data/africa_roads.shp")
# Problem 1 ---------------------------------------------------------------
plot(africa_roads["type"], reset=F, main = "Roads by Type", key.pos=1)
plot(africa_roads["type"], reset=F, main = "Roads by Type", key.pos=1)
View(africa_roads)
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Libraries & Working Directory -------------------------------------------
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
return("OK")
}
global.libraries <- c("tidyverse", "sf", "haven", "raster", "gstat", "viridis", "tmap", "units", "collapse")
results <- sapply(as.list(global.libraries), pkgTest)
# library(tidyverse)
# library(sf)
# library(haven)
# library(raster)
# library(gstat)
# library(viridis)
# library(tmap)
dir <- "/Users/atay508/Documents/George Mason/2022-23 Classes/Spatial/Spatial-Class-Materials-Fall-2022/Coding Exercise 1"
setwd(dir)
getwd()
# Data --------------------------------------------------------------------
africa_sf <- st_read("./data/africa_scale.shp")
africa_roads <- st_read("./data/africa_roads.shp")
plot(africa_roads["type"], reset=F, main = "Roads by Type", key.pos=1)
plot(africa_roads["type"], reset=F, main = "Africa's Roads by Type", key.pos=1)
base::plot(africa_roads["type"], reset=F, main = "Roads by Type", key.pos=1)
